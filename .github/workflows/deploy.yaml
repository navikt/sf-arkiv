name: Build, push, and deploy

on: [push, pull_request]

jobs:
  build:
    name: Build and push Docker container
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    outputs:
      image: ${{ steps.docker-push.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Setup Gradle to generate and submit dependency graphs
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-disabled: true
          dependency-graph: generate-and-submit
      - name: Build JAR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew clean build shadowJar -x test
      - name: Build and publish Docker image
        uses: nais/docker-build-push@v0
        id: docker-push
        env:
          TRIVY_JAVA_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-java-db:1"
        with:
          team: teamcrm
  deploy-dev:
    name: Deploy to dev-fss
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-fss
          RESOURCE: .nais/dev.yaml
          VAR: image=${{ needs.build.outputs.image }}
  deploy-prod:
    name: Deploy to prod-fss
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-fss
          RESOURCE: .nais/prod.yaml
          VAR: image=${{ needs.build.outputs.image }}
